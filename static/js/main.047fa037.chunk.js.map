{"version":3,"sources":["Component/Nav/nav.js","Component/ButtonCss/ButtonAwesome.js","Component/ButtonCss/ButtonBorderMove.js","Component/ButtonCss/ButtonRipple.js","Component/ButtonCss/ButtonBorderAuto.js","Component/ButtonCss/ButtonNeon.js","Component/ButtonCss/ButtonBorderCover.js","Component/ButtonCss/ButonCss.js","Component/todoList/addTodo.js","Component/todoList/deleteTodo.js","Component/todoList/editTodo.js","Component/todoList/filterTodo.js","Component/todoList/todoList.js","Component/posts/ListPosts.js","Component/posts/PostDetail.js","Component/toastMessage/ToastMessage.js","Component/login/Login.js","Component/Home/Home.js","App.js","reportWebVitals.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","updateIsLogin","value","type","payload","history","useHistory","className","to","activeClassName","exact","onClick","localStorage","setItem","push","icon","faSignOutAlt","ButtonAwesome","ButtonBorderMove","ButtonRipple","ButtonBorderAuto","ButtonNeon","ButtonBorderCover","ButonCss","addListTodo","todo","showAddForm","handleCloseAddForm","useState","workName","setWorkName","startDate","setStartDate","endDate","setEndDate","handleCloseForm","handleAddTodo","a","alert","Date","parse","axios","post","res","data","Modal","show","onHide","onChange","e","target","placeholder","deleteTodo","id","showDeleteForm","handleCloseDeleteForm","todoDelete","handleDeleteTodo","delete","EditTodo","todoEdit","setTodoEdit","style","width","todoStatus","FilterTodo","onFilter","dataFilter","setDataFilter","typingTimeoutRef","useRef","current","clearTimeout","setTimeout","handleFilterTodo","state","todos","isLogin","getListTodo","list","updateTodo","filterTodo","loading","setLoading","setShowAddForm","setShowDeleteForm","setTodoDelete","isEmptyEditTodo","Object","keys","length","useEffect","ourRequest","CancelToken","source","get","cancelToken","token","response","items","isCancel","console","log","message","fetchData","cancel","handleEditTodo","put","map","index","handleShowDeleteForm","ListPost","posts","setPosts","setShow","title","setTitle","content","setContent","slice","reverse","handleAddPost","body","userId","dataSimple","event","PostDetail","useParams","setPost","item","ToastMessage","toasts","setToasts","showToast","success","faCheckCircle","warning","faExclamationCircle","error","toastProperty","Math","floor","random","autoClose","filter","toast","faTimes","setError","username","password","accout","setAccout","hidePassRef","showPassRef","passInput","userAccout","handleLogin","document","addEventListener","keyCode","preventDefault","htmlFor","handleChangeUser","display","ref","faEye","faEyeSlash","handleChangePassWord","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","users","name","getItem","reduxStore","createStore","action","newTodos","newTodo","objIndex","findIndex","obj","user","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.047fa037.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './nav.scss'\r\nimport {NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst  Nav = ({updateIsLogin}) => {\r\n\r\n  const history = useHistory()\r\n  const handleLogOut = () =>{\r\n    updateIsLogin('false')\r\n    localStorage.setItem('isLogin','false')\r\n    history.push(\"/my-app/login\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"topnav\">\r\n      <NavLink to=\"/my-app/\" activeClassName=\"active\" exact ={true}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink to=\"/my-app/button\" activeClassName=\"active\">BUTTON HOVER CSS</NavLink>\r\n      <NavLink to=\"/my-app/todo\" activeClassName=\"active\">Todo List</NavLink>\r\n      <NavLink to=\"/my-app/post\" activeClassName=\"active\">POST</NavLink>\r\n      <NavLink to=\"/my-app/toast\" activeClassName=\"active\">Toast Message</NavLink>\r\n\r\n      <div className = \"sign-out-btn\">\r\n        <span onClick = { () => handleLogOut()}>\r\n        <FontAwesomeIcon icon = {faSignOutAlt} />\r\n        Logout\r\n        </span>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps  = (dispatch) =>{\r\n  return {\r\n      updateIsLogin : (value) => dispatch({type:'UPDATE_LOGIN',payload:value})\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps) (Nav)\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./ButtonAwesome.scss\";\r\n\r\nexport default function ButtonAwesome() {\r\n  return (\r\n    <div className=\"middle\">\r\n      <div className=\"btn-wrap\">\r\n        <button className=\"btn btn1\">Hover Me</button>\r\n        <button className=\"btn btn2\">Hover Me</button>\r\n        <button className=\"btn btn3\">Hover Me</button>\r\n        <button className=\"btn btn4\">Hover Me</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./ButtonBorderMove.scss\"\r\nexport default function ButtonBorderMove() {\r\n    return (\r\n        <div className=''>\r\n            <button className =\"btn-border-move\">\r\n                Hover Me\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./ButtonRipple.scss\"\r\n\r\nexport default function ButtonRipple() {\r\n    return (\r\n        <div className = 'button-ripple'>\r\n            <button className = \"btn btn1\">Hover Me</button>\r\n            <button className = \"btn btn2\">Hover Me</button>\r\n            <button className = \"btn btn3\">Hover Me</button>\r\n            <button className = \"btn btn4\">Hover Me</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./ButtonBorderAuto.scss\"\r\nexport default function ButtonBorderAuto() {\r\n    return (\r\n        <div className = \" border-auto\">\r\n            <div className =\"btn-wrap\" >\r\n            <button   className = \"btn\">\r\n            <span className =\"btn-span1\"></span>\r\n            <span className =\"btn-span2\"></span>\r\n            <span className =\"btn-span3\"></span>\r\n            <span className =\"btn-span4\"></span>\r\n            Hover Me\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./ButtonNeon.scss\"\r\n\r\nexport default function ButtonNeon() {\r\n    return (\r\n        <div className = \" neon-button\">\r\n            <button className = 'btn'  >\r\n                <span className = \"btn-span1\"></span>\r\n                <span className = \"btn-span2\"></span>\r\n                <span className = \"btn-span3\"></span>\r\n                <span className = \"btn-span4\"></span>\r\n                Hover Me\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./ButtonBorderCover.scss\"\r\nexport default function ButtonBorderCover() {\r\n    return (\r\n        <div className = \"border-cover\">\r\n            <button className = \"btn\">\r\n                <span className =\"btn-span1\"></span>\r\n                <span className =\"btn-span2\"></span>\r\n                <span className =\"btn-span3\"></span>\r\n                <span className =\"btn-span4\"></span>\r\n                Hover Me\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ButtonAwesome from './ButtonAwesome'\r\nimport ButtonBorderMove from './ButtonBorderMove'\r\nimport ButtonRipple from './ButtonRipple'\r\nimport ButtonBorderAuto from './ButtonBorderAuto'\r\nimport ButtonNeon from './ButtonNeon'\r\nimport ButtonBorderCover from './ButtonBorderCover'\r\nimport './ButtonMain.scss'\r\n\r\nexport default function ButonCss() {\r\n    return (\r\n        <div className='button-wrap'>\r\n            <div className='button-1'>\r\n        <ButtonAwesome />\r\n            </div>\r\n            <div className='button-2'>\r\n        <ButtonBorderMove />\r\n        <ButtonBorderCover />\r\n        <ButtonNeon />\r\n        <ButtonBorderAuto />\r\n            </div>\r\n            <div className='button-3'>\r\n        <ButtonRipple />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Modal } from 'react-bootstrap'\r\nimport {useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\n\r\n const AddTodo = ({showAddForm,handleCloseAddForm,addListTodo}) => {\r\n\r\n        const [workName,setWorkName] = useState('')\r\n        const [startDate,setStartDate] = useState('')\r\n        const [endDate,setEndDate] = useState('')\r\n\r\n        const handleCloseForm = () =>{\r\n            handleCloseAddForm();\r\n            setWorkName('');\r\n            setStartDate('');\r\n            setEndDate('');\r\n        }\r\n\r\n        const handleAddTodo = async (workName,startDate,endDate) =>{\r\n            if(!workName){\r\n                alert(\"Work Name is Empty!\")\r\n                return;\r\n            }\r\n            if(!startDate){\r\n                alert(\"Start Date is Empty!\")\r\n                return;\r\n            }\r\n            if(!endDate){\r\n                alert(\"End Date is Empty!\")\r\n                return;\r\n            }\r\n            if(Date.parse(startDate)>Date.parse(endDate)){\r\n                alert(\"End Date must be greater Start Date!\")\r\n                return;\r\n            }\r\n            let todo = \r\n                { \r\n                    \"workName\": workName,\r\n                    \"startDate\": startDate,\r\n                    \"endDate\": endDate,\r\n                    \"todoStatus\": \"Planing\"\r\n                }    \r\n            let res = await axios.post('http://localhost:8081/todo/add',todo)\r\n            addListTodo(res.data)\r\n            handleCloseAddForm()\r\n              \r\n        }\r\n    return (\r\n        <div>\r\n            <Modal show={showAddForm} onHide={handleCloseForm}>\r\n        <div className = \"add-new-wrap\">\r\n        <h2 className = \"add-new-title\">---ADD NEW TODO---</h2>\r\n        <div className = \"input-data\" >\r\n        <label className =\"title-input\" >Work Name</label>\r\n        <input\r\n        value = {workName} onChange = {(e)=>{setWorkName(e.target.value)}}\r\n        type = \"text\" placeholder = \"Work name?\"/>\r\n        </div>\r\n        <div className = \"input-data\" >\r\n        <label className =\"title-input\" >Start Date</label>\r\n        <input\r\n        value = {startDate} onChange = {(e)=>{setStartDate(e.target.value)}}\r\n        type = \"date\" placeholder = \"Start Date?\"/>\r\n        </div>\r\n        <div className = \"input-data\">\r\n        <label className = \"content-input\">End Date</label>\r\n        <input\r\n        value = {endDate} onChange = {(e)=>{setEndDate(e.target.value)}}\r\n        type = \"date\" placeholder = \"End Date?\" />\r\n        </div>\r\n        <button\r\n        onClick = {() =>handleAddTodo(workName,startDate,endDate)}\r\n        className = \"btn-add-new-todo\"\r\n        >ADD</button>\r\n        <button\r\n        onClick = {handleCloseForm}\r\n        className = \"btn-add-new-cancel\"\r\n        >Cancel</button>\r\n        </div>\r\n      </Modal>\r\n        </div>\r\n    )\r\n}    \r\n   const mapDispatchToProps  = (dispatch) =>{\r\n       return {\r\n           addListTodo : (todo) => dispatch({type:'ADD_TODO',payload : todo})\r\n       }\r\n   }\r\n\r\nexport default connect(null,mapDispatchToProps) (AddTodo);\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst DeleteTodo = ({showDeleteForm,handleCloseDeleteForm,todoDelete,deleteTodo}) =>{\r\n\r\n        const handleDeleteTodo = async () =>{           \r\n            await axios.delete(`http://localhost:8081/todo/delete/${todoDelete.id}`)\r\n            deleteTodo(todoDelete.id)\r\n            handleCloseDeleteForm();\r\n        } \r\n        return (\r\n        <Modal show={showDeleteForm} onHide={handleCloseDeleteForm}>\r\n        <div className = \"delete-wrap\">\r\n        <h1 className = \"delete-title\">Delete Todo</h1>\r\n        <p className = \"delete-body\">Are you sure you want to delete this todo ?</p>\r\n        <button\r\n        className = \"btn-delete-form cancel-btn\" \r\n        onClick = {handleCloseDeleteForm}\r\n        >Cancel</button>\r\n        <button\r\n        className = \"btn-delete-form delete-btn\"\r\n        onClick = {()=>{handleDeleteTodo()}} \r\n        >Delete</button>\r\n        </div>\r\n      </Modal>\r\n\r\n        )\r\n}\r\nconst mapDispatchToProps  = (dispatch) =>{\r\n    return {\r\n        deleteTodo : (id) => dispatch({type:'DELETE_TODO',payload:id})\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps) (DeleteTodo);","import React from \"react\";\r\n\r\nconst EditTodo = ({ todoEdit, setTodoEdit }) => {\r\n  return (\r\n    <>\r\n      <td className=\"todo-item\">\r\n        <input\r\n          value={todoEdit.workName}\r\n          onChange={(e) =>\r\n            setTodoEdit({ ...todoEdit, workName: e.target.value })\r\n          }\r\n        />\r\n      </td>\r\n      <td className=\"todo-item\">\r\n        <input\r\n          type=\"date\"\r\n          style={{ width: \"140px\" }}\r\n          value={todoEdit.startDate}\r\n          onChange={(e) =>\r\n            setTodoEdit({\r\n              ...todoEdit,\r\n              startDate: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </td>\r\n      <td className=\"todo-item\">\r\n        <input\r\n          type=\"date\"\r\n          style={{ width: \"140px\" }}\r\n          value={todoEdit.endDate}\r\n          onChange={(e) =>\r\n            setTodoEdit({ ...todoEdit, endDate: e.target.value })\r\n          }\r\n        />\r\n      </td>\r\n      <td className=\"todo-item\">\r\n        <select\r\n          value={todoEdit.todoStatus}\r\n          onChange={(e) =>\r\n            setTodoEdit({\r\n              ...todoEdit,\r\n              todoStatus: e.target.value,\r\n            })\r\n          }\r\n        >\r\n          <option value=\"Planing\">Planing</option>\r\n          <option value=\"Complete\">Complete</option>\r\n        </select>\r\n      </td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n","import React from 'react'\r\nimport { useState,useRef } from 'react'\r\n\r\nexport default function FilterTodo({onFilter}) {\r\n    const [dataFilter,setDataFilter] = useState('')\r\n    const typingTimeoutRef = useRef(null)\r\n    const handleFilterTodo = (e) =>{\r\n        let data  = e.target.value;\r\n        setDataFilter(data)\r\n\r\n        if(typingTimeoutRef.current){\r\n            clearTimeout(typingTimeoutRef.current)\r\n        }\r\n\r\n        typingTimeoutRef.current = setTimeout(() =>{\r\n            onFilter(e.target.value)\r\n        },1000)\r\n    }\r\n    return (\r\n        <div>\r\n            <input\r\n            value = {dataFilter} onChange = { e => handleFilterTodo(e)}\r\n             className = \"search-input\" type= \"text\" placeholder = \"Search here\"  /> \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./todoList.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddTodo from \"./addTodo\";\r\nimport DeleteTodo from \"./deleteTodo\";\r\nimport { connect } from \"react-redux\";\r\nimport EditTodo from \"./editTodo\";\r\nimport { useHistory } from \"react-router\";\r\nimport FilterTodo from \"./filterTodo\";\r\n\r\n\r\nconst TodoList = ({ getListTodo, todos, updateTodo,filterTodo,isLogin }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [showDeleteForm, setShowDeleteForm] = useState(false);\r\n  const [todoDelete, setTodoDelete] = useState({});\r\n  const [todoEdit, setTodoEdit] = useState({});\r\n  const history = useHistory()\r\n  let isEmptyEditTodo = Object.keys(todoEdit).length === 0;\r\n  useEffect(() =>{\r\n    if(isLogin === false){\r\n        history.push(\"/login\")\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n  useEffect(() => {\r\n    const ourRequest = axios.CancelToken.source();\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8081/todo/listAll\", {\r\n          cancelToken: ourRequest.token, // <-- 2nd step\r\n        });\r\n        const items = response && response.data ? response.data : [];\r\n        setLoading(false);\r\n        getListTodo(items);\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          console.log(\"Request Cancel :\", error.message);\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      fetchData();\r\n    }, 2000);\r\n    return () => {\r\n      ourRequest.cancel(\"Cancel by user\"); // <-- 3rd step\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const handleEditTodo = async (todo) => {\r\n    //Save data\r\n    if ((isEmptyEditTodo === false) & (todoEdit.id === todo.id)) {\r\n      let res = await axios.put(\r\n        `http://localhost:8081/todo/${todoEdit.id}`,\r\n        todoEdit\r\n      );\r\n      updateTodo(res.data);\r\n      setTodoEdit({});\r\n      return;\r\n    }\r\n    // Edit data\r\n    setTodoEdit(todo);\r\n    return;\r\n  };\r\n  const handleCloseAddForm = () => setShowAddForm(false);\r\n  const handleShowAddForm = () => setShowAddForm(true);\r\n  const handleCloseDeleteForm = () => setShowDeleteForm(false);\r\n  const handleShowDeleteForm = (todo) => {\r\n    setShowDeleteForm(true);\r\n    setTodoDelete(todo);\r\n  };\r\n  const onFilter = async (value) =>{\r\n    let res;\r\n    if(value === ''){\r\n      res = await axios.get('http://localhost:8081/todo/listAll')\r\n    }else{\r\n      res = await axios.get(`http://localhost:8081/todo/search/${value}`)\r\n    }\r\n    console.log(res.data)\r\n      filterTodo(res.data);\r\n  }\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <FilterTodo onFilter = {onFilter} />\r\n      <DeleteTodo\r\n        showDeleteForm={showDeleteForm}\r\n        handleCloseDeleteForm={handleCloseDeleteForm}\r\n        todoDelete={todoDelete}\r\n      />\r\n      <AddTodo\r\n        showAddForm={showAddForm}\r\n        handleCloseAddForm={handleCloseAddForm}\r\n      />\r\n      <button onClick={handleShowAddForm} className=\"add-button\">\r\n        {\" \"}\r\n        Add Todo\r\n      </button>\r\n      <h2 className=\"title\">Todo List</h2>\r\n      <table>\r\n        <thead>\r\n          <tr className=\"todo-header\">\r\n            <th className=\"header-item\">ID</th>\r\n            <th className=\"header-item\">Work Name</th>\r\n            <th className=\"header-item\">Start Date</th>\r\n            <th className=\"header-item\">End Date</th>\r\n            <th className=\"header-item\">Status</th>\r\n            <th className=\"header-item\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading === false &&\r\n            todos.map((todo, index) => (\r\n              <tr className=\"todo-list\" key={todo.id}>\r\n                <td className=\"todo-item todo-id\">{index + 1}</td>\r\n                {isEmptyEditTodo ? (\r\n                  <>\r\n                    <td className=\"todo-item\">{todo.workName}</td>\r\n                    <td className=\"todo-item\">{todo.startDate}</td>\r\n                    <td className=\"todo-item\">{todo.endDate}</td>\r\n                    <td className=\"todo-item\">{todo.todoStatus}</td>\r\n                  </>\r\n                ) : todo.id === todoEdit.id ? (\r\n                  <EditTodo todoEdit={todoEdit} setTodoEdit={setTodoEdit} />\r\n                ) : (\r\n                  <>\r\n                    <td className=\"todo-item\">{todo.workName}</td>\r\n                    <td className=\"todo-item\">{todo.startDate}</td>\r\n                    <td className=\"todo-item\">{todo.endDate}</td>\r\n                    <td className=\"todo-item\">{todo.todoStatus}</td>\r\n                  </>\r\n                )}\r\n                <td className=\"todo-item todo-action\">\r\n                  <button\r\n                    onClick={() => {\r\n                      handleEditTodo(todo);\r\n                    }}\r\n                    className=\"btn-todo edit\"\r\n                  >\r\n                    {isEmptyEditTodo === false && todo.id === todoEdit.id\r\n                      ? \"Save\"\r\n                      : \"Edit\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleShowDeleteForm(todo)}\r\n                    className=\"btn-todo delete\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          {loading === true && (\r\n            <tr>\r\n              <td className=\"loading\"> Loading...</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos,\r\n    isLogin :state.isLogin\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getListTodo: (list) => dispatch({ type: \"LIST_TODO\", payload: list }),\r\n    updateTodo: (todo) => dispatch({ type: \"UPDATE_TODO\", payload: todo }),\r\n    filterTodo: (todos) => dispatch({type:\"FILTER_TODO\",payload:todos})\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React, { useState,useEffect } from 'react'\r\nimport axios from 'axios' \r\nimport { useHistory } from 'react-router'\r\nimport './ListPosts.scss'\r\nimport { Modal } from 'react-bootstrap'\r\nconst ListPost = () =>{\r\n    const history = useHistory()\r\n    const [posts,setPosts] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n    const [show, setShow] = useState(false);\r\n    const [title,setTitle] = useState('')\r\n    const [content,setContent] = useState('')\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n      \r\n    })\r\n\r\n    useEffect(() => {\r\n        const ourRequest = axios.CancelToken.source()\r\n        async function fetchData() {\r\n            try {\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts',{\r\n                cancelToken: ourRequest.token, // <-- 2nd step\r\n              })\r\n            const items = (response && response.data) ? response.data.slice(0,9) : [] ;\r\n            setPosts(items.reverse())\r\n            setLoading(false)\r\n            } catch (error) {\r\n                if(axios.isCancel(error)){\r\n                    console.log('Request Cancel :',error.message)\r\n                }\r\n            }  \r\n          }\r\n        setTimeout(()=>{\r\n              fetchData();\r\n            },2000);\r\n            return () => {\r\n                ourRequest.cancel('Cancel by user') // <-- 3rd step\r\n              }\r\n        },[])\r\n        \r\n\r\n        const handleShowDetail = (id)=>{\r\n          history.push(`/post/${id}`)\r\n        }\r\n        const handleAddPost = async ({content,title}) =>{\r\n            let data = {\r\n              title: title,\r\n              body: content,\r\n              userId: 1,\r\n            }\r\n        let res = await axios.post('https://jsonplaceholder.typicode.com/posts',data)\r\n              console.log(res.data)\r\n              let dataSimple = [res.data,...posts]\r\n              setPosts(dataSimple)\r\n        setShow(false)\r\n        }\r\n      return (\r\n        <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <div className = \"add-new-wrap\">\r\n        <h2 className = \"add-new-title\">---ADD NEW BLOG---</h2>\r\n        <div className = \"input-data\" >\r\n        <label className =\"title-input\" >Title</label>\r\n        <input\r\n        value = {title} onChange = {(event)=>{setTitle(event.target.value)}}\r\n        type = \"text\" placeholder = \"Nhập title\"/>\r\n        </div>\r\n        <div className = \"input-data\">\r\n        <label className = \"content-input\">Content</label>\r\n        <input\r\n        value = {content} onChange = {(event)=>{setContent(event.target.value)}}\r\n        type = \"text\" placeholder = \"Nhập Content\" />\r\n        </div>\r\n        <button className = \"btn-add-new\"\r\n        onClick = {() => handleAddPost({content,title})}\r\n        >Submit</button>\r\n        </div>\r\n      </Modal>\r\n        <h2 className = 'title' >List Post</h2>\r\n        <div className = 'add-button-wrap'>\r\n        <button className = 'add-button'\r\n        onClick={handleShow}\r\n        >Add Post</button>\r\n        </div>\r\n        <div className = 'post-container'>\r\n            {loading === false && posts && posts.length > 0 && posts.map(post =>(\r\n                <div key = {post.id} className = \"post\">\r\n                    <h3 className = \"post-title\">{post.title}</h3>\r\n                    <p className = \"post-body\">{post.body}</p>\r\n                    <div className = \"button-wrap\" >\r\n                    <button className = \"btn post-button-detail\"\r\n                    onClick = {()=>handleShowDetail(post.id)}\r\n                    >Show Detail</button>\r\n                    <button className = \"btn post-button-delete\">Delete</button>\r\n                    </div>            \r\n                    </div>\r\n            ))}\r\n            {loading === true && \r\n            <span className =\"loading\"> Loading...</span>\r\n            }\r\n        </div>\r\n        </>\r\n\r\n      )\r\n}\r\n\r\nexport default ListPost;\r\n\r\n\r\n","import { useEffect,useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./PostDetail.scss\";\r\n\r\nconst PostDetail  = () =>{\r\n    let history = useHistory();\r\n    let {id} = useParams()\r\n    const [post,setPost] = useState()\r\n    const [loading,setLoading] = useState(true)\r\n    useEffect(() => {\r\n        const ourRequest = axios.CancelToken.source()\r\n        async function fetchData() {\r\n            try {\r\n                const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`,{\r\n                cancelToken: ourRequest.token, // <-- 2nd step\r\n              })\r\n            const item = (response && response.data) ? response.data : {} ;\r\n            setPost(item)\r\n            setLoading(false)\r\n            } catch (error) {\r\n                if(axios.isCancel(error)){\r\n                    console.log('Request Cancel :',error.message)\r\n                }\r\n            }  \r\n          }\r\n        setTimeout(()=>{\r\n              fetchData();\r\n            },2000);\r\n            return () => {\r\n                ourRequest.cancel('Cancel by user') // <-- 3rd step\r\n              }\r\n              // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[])\r\n    const handleBack = () =>{\r\n        history.push(\"/post\")\r\n    }\r\n        return(\r\n            <>\r\n                <div className = \"post-detail-container\">\r\n                <h1 className = \"post-id\">Post Detail ID : {id}</h1>\r\n            {loading === false && post &&  \r\n            <>\r\n                <h3 className = \"post-title\">Title : {post.title}</h3>\r\n                <p className = \"post-body\">{post.body}</p>\r\n                </>\r\n            }\r\n                </div>\r\n            {loading === true && \r\n            <div className = \"loading-wrap\" >\r\n                <span className =\"loading\"> Loading...</span>\r\n            </div>\r\n            }\r\n                <button className = \"back-button\" onClick = {()=>handleBack()}>  &laquo; Back</button>\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default PostDetail;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle,faExclamationCircle,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport { useState,useEffect } from 'react'\r\nimport \"./toastMessage.scss\"\r\nexport default function ToastMessage() {\r\n\r\n    const [toasts,setToasts] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n    \r\n    const showToast = (type,message) =>{\r\n        const icons = {\r\n            success: faCheckCircle,\r\n            warning:faExclamationCircle,\r\n            error:faExclamationCircle\r\n        }\r\n        const titles = {\r\n            success: 'Success',\r\n            warning:'Warning',\r\n            error:'Error'\r\n        }\r\n        const icon = icons[type]\r\n        const title = titles[type]\r\n        \r\n        const toastProperty = {\r\n            id:Math.floor(Math.random()*10000),\r\n            type:type,\r\n            title:title,\r\n            icon : icon,\r\n            message:message\r\n        }\r\n        setToasts([...toasts,toastProperty]);\r\n        setTimeout(()=>{\r\n            autoClose(toastProperty.id);\r\n          },4000);\r\n    }\r\n    const autoClose = (id) =>{\r\n        let data = toasts.filter(toast => toast.id !== id);\r\n        setToasts(data)\r\n    }\r\n    \r\n    return (\r\n        <div className =\"toast--container\" >\r\n            {console.log(\"render\")}\r\n            <button\r\n            onClick = {() =>showToast('success', 'Success Message' )}\r\n            >Success</button>\r\n            <button\r\n            onClick = {() =>showToast('warning', 'Warning Message' )}\r\n            >Warning</button>\r\n            <button\r\n            onClick = {() =>showToast('error', 'Error Message' )}\r\n            >Error</button>\r\n            {toasts.length > 0 && toasts.map((toast,index) => (\r\n                <div key = {index} className = {\"toast-css \" + toast.type}>\r\n                <div className = \"toast-icon  \">\r\n                    <FontAwesomeIcon icon = {toast.icon} />\r\n                </div>\r\n                <div className = \"toast-body\">\r\n                    <h4 className = \"toast-body-title\">{toast.title}</h4>\r\n                    <p className = \"toast-body-message\">{toast.message}</p>\r\n                </div>\r\n                <div className = \"toast-close\">\r\n                    <span>\r\n                        <FontAwesomeIcon icon = {faTimes} />\r\n                    </span>\r\n                </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./Login.scss\";\r\nimport { useState ,useEffect,useRef} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faEye,faEyeSlash} from '@fortawesome/free-solid-svg-icons'\r\n const Login = ({updateIsLogin,isLogin}) => {\r\n\r\n    const [error,setError] = useState(false)\r\n    const [accout,setAccout] =  useState({\r\n        username:'',\r\n        password :''\r\n    });\r\n    const hidePassRef = useRef()\r\n    const showPassRef = useRef()\r\n    const passInput = useRef()\r\n    const history = useHistory()\r\n    const userAccout = {\r\n        username: 'DungNM25',\r\n        password : \"123456\"\r\n    }\r\n    \r\n    useEffect(()=>{\r\n      if(isLogin === 'true'){\r\n        history.push('/my-app/')\r\n      }\r\n    })\r\n    const handleLogin = () =>{\r\n        if(accout.username === userAccout.username && accout.password === userAccout.password){\r\n            updateIsLogin('true')\r\n            localStorage.setItem('isLogin','true')\r\n            history.push('/my-app/')\r\n        }else{\r\n            setError(true)\r\n        }\r\n    } \r\n    const handleChangeUser = (e) =>{\r\n        setError(false)\r\n        setAccout({...accout,username:e.target.value})\r\n    }\r\n    const handleChangePassWord = (e) =>{\r\n        setError(false)\r\n        setAccout({...accout,password:e.target.value})\r\n    }\r\n    document.addEventListener(\"keyup\", function(event) {\r\n      if (event.keyCode === 13) {\r\n       event.preventDefault();\r\n       handleLogin();\r\n      }\r\n    })\r\n    const handleShowPass = () =>{\r\n      showPassRef.current.style.display = 'none'\r\n      hidePassRef.current.style.display = 'block'\r\n      passInput.current.type = 'text'\r\n    }\r\n    const handleHidePass = () =>{\r\n      showPassRef.current.style.display = 'block'\r\n      hidePassRef.current.style.display = 'none'\r\n      passInput.current.type = 'password'\r\n    }\r\n  return (\r\n      <div className = \"login-page\">\r\n        <div className = \"user-and-pass\">\r\n        <span>User:DungNM25</span>\r\n        <span>Pass:123456</span>\r\n        </div>\r\n    <div className=\"login-container\">\r\n      <h1 className=\"login-title\">Accout Login</h1>\r\n      <div className=\"login-form\">\r\n        <label className=\"login-label\" htmlFor=\" \">\r\n          UserName\r\n        </label>\r\n        <input className=\"login-input\"\r\n         value = {accout.username} onChange = {e =>handleChangeUser(e)}  />\r\n         {error && <span className = \"login-invalid\">username or password is wrong!</span>}\r\n      </div>\r\n      <div className=\"login-form\">\r\n        <label className=\"login-label\" htmlFor=\" \">\r\n          PassWord\r\n        </label>\r\n        <span onClick = {()=> handleShowPass()} className = \"showPassIcon\" ref = {showPassRef} ><FontAwesomeIcon icon = {faEye} /> </span>\r\n        <span onClick = {()=> handleHidePass()} className = \"hidePassIcon\" ref = {hidePassRef} ><FontAwesomeIcon icon = {faEyeSlash} /></span>\r\n        <input className=\"login-input\" type = \"password\" ref = {passInput}\r\n         value = {accout.password} onChange = {e =>handleChangePassWord(e)}   />\r\n         {error && <span className = \"login-invalid\">username or password is wrong!</span>}\r\n      </div>\r\n      <div className=\"login-selection\">\r\n        <div className=\"login-remember\">\r\n          <input className=\"remember-input\" type=\"checkbox\" />\r\n          <label className=\"remember-label\"> Remember Me</label>\r\n        </div>\r\n        <label className=\"forgot-label\"> Forgot PassWord?</label>\r\n      </div>\r\n      <button className=\"login-btn\" onClick = {() => handleLogin()}>Log in</button>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin :state.isLogin\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps  = (dispatch) =>{\r\n    return {\r\n        updateIsLogin : (value) => dispatch({type:'UPDATE_LOGIN',payload:value})\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Login)\r\n\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport \"./Home.scss\"\r\n\r\nconst  Home = ({isLogin}) =>{\r\n\r\n    const history = useHistory()\r\n    useEffect(() =>{\r\n      if(isLogin === 'false'){\r\n        history.push(\"/my-app/login\")\r\n      }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return (\r\n        <div className = \"home\">\r\n           {isLogin &&\r\n           <div className = \"home-container\">\r\n            <span className= \"home-title\">\r\n           Welcome To My App\r\n           </span>\r\n           </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      isLogin: state.isLogin,\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getListTodo: (list) => dispatch({ type: \"LIST_TODO\", payload: list }),\r\n      updateTodo: (todo) => dispatch({ type: \"UPDATE_TODO\", payload: todo }),\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps) (Home)\r\n","import Nav from './Component/Nav/nav';\nimport ButonCss from './Component/ButtonCss/ButonCss';\nimport TodoList from './Component/todoList/todoList';\nimport ListPost from './Component/posts/ListPosts';\nimport PostDetail from './Component/posts/PostDetail';\nimport ToastMessage from './Component/toastMessage/ToastMessage';\nimport Login from './Component/login/Login';\nimport { connect } from 'react-redux';\nimport \"./fontawesome\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './Component/Home/Home';\n\nfunction App({isLogin}) {\n  return (\n    <Router>\n    <div className=\"App\">\n      {isLogin === 'true' && <Nav />}\n   <Switch>\n          <Route path=\"/my-app\" exact >\n            <Home />\n          </Route>\n          <Route path=\"/my-app/button\" >\n            <ButonCss />\n          </Route>\n          <Route path=\"/my-app/todo\">\n            <TodoList />\n          </Route>\n          <Route path=\"/my-app/post\" exact>\n            <ListPost />\n          </Route>\n          <Route path=\"/my-app/post/:id\">\n            <PostDetail />\n          </Route>\n          <Route path=\"/my-app/toast\">\n            <ToastMessage />\n          </Route>\n          <Route path=\"/my-app/login\" >\n            <Login />\n          </Route>\n  </Switch> \n    </div>\n  </Router>\n  \n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.isLogin,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getListTodo: (list) => dispatch({ type: \"LIST_TODO\", payload: list }),\n    updateTodo: (todo) => dispatch({ type: \"UPDATE_TODO\", payload: todo }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n  users: [\r\n    { id: 1, name: \"DungNM\" },\r\n    { id: 2, name: \"HOc Lap Trinh\" },\r\n    { id: 3, name: \"Dung HOc Lap Trinh\" },\r\n  ],\r\n  todos: [],\r\n  isLogin: localStorage.getItem('isLogin'),\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        isLogin: action.payload,\r\n      }\r\n    case \"LIST_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n      };\r\n    case \"ADD_TODO\":\r\n      {\r\n      let newTodos = [...state.todos, action.payload];\r\n      return {\r\n        ...state,\r\n        todos: [...newTodos],\r\n      }\r\n    };\r\n    case \"DELETE_TODO\":\r\n      {\r\n       let newTodos = [...state.todos];\r\n       newTodos = newTodos.filter(newTodo => newTodo.id !== action.payload)\r\n      return {\r\n        ...state,\r\n        todos: [...newTodos],\r\n      }};\r\n      case \"UPDATE_TODO\":\r\n      {\r\n       let newTodos = [...state.todos];\r\n       let objIndex = newTodos.findIndex((obj) => obj.id === action.payload.id);\r\n       newTodos[objIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        todos: [...newTodos],\r\n      }};\r\n      case \"FILTER_TODO\":\r\n      {\r\n       let newTodos = [...action.payload];\r\n      return {\r\n        ...state,\r\n        todos: [...newTodos],\r\n      }};\r\n    case \"LIST_USER\":\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case \"DELETE_USER\":\r\n      let users = state.users;\r\n      users = users.filter((user) => user.id !== action.payload.id);\r\n      console.log(users);\r\n      return {\r\n        ...state,\r\n        users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { rootReducer };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport {rootReducer} from './store/reducers/rootReducer'\r\n\r\n\r\nconst reduxStore = createStore(rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {reduxStore} >\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}